<div>
    <h2>Deep learning for self-driving car</h2>
    <div>
        <p>
            The following tutorials, videos, blogs, and papers are excellent resources for additional study before, during, and after the class.  Note: 6.S094 is designed for people who are new to programming, machine learning, and robotics. The following are optional resources for longer-term study of the subject.
        </p>
        <h3>Course Tutorials</h3>
        <p>
            The following tutorials help introduce Python, TensorFlow, and the two autonomous driving simulations described in the class.
        </p>
        <ul>
            <li>(Optional) Setting Up Docker and TensorFlow [<a href="http://selfdrivingcars.mit.edu/setting-up-docker-and-tensorflow-for-windows/">for Linux</a>][<a href="http://selfdrivingcars.mit.edu/setting-up-docker-and-tensorflow-for-windows-7-windows-10-home/">for Windows</a>] – This is the easiest way to follow along with the Python/TensorFlow tutorials below.</li>
            <li>(Optional) <a href="https://github.com/lexfridman/deepcars/blob/master/1_python_perceptron.ipynb">Implementing the Perceptron Algorithm in Python</a> – There are other Jupyter (aka iPython) notebooks in this repo that would be useful for you to follow (including the traffic light classification notebook).</li>
            <li>(Optional) <a href="http://selfdrivingcars.mit.edu/installing-opencv-to-the-tensorflow-docker-image/">Installing OpenCV to the TensorFlow Docker Image</a></li>
            <li><a href="http://selfdrivingcars.mit.edu/deeptraffic">DeepTraffic: Solving Traffic with Deep Reinforcement Learning</a></li>
            <li><a href="http://selfdrivingcars.mit.edu/deepteslajs/">DeepTesla: End-to-End Steering Model</a></li>
        </ul>
        <h3>Getting Started</h3>
        <ul>
            <li><strong>Python:</strong> <a href="http://www.learnpython.org/">Interactive Python Tutorial</a> is a fast-paced, broad-ranging, and fun interactive introduction and overview of Python.</li>
            <li><strong>Machine Learning with Python:</strong> <a href="https://pythonprogramming.net/machine-learning-tutorial-python-introduction/">Practical Machine Learning Tutorial with Python Introduction</a> is an in-depth but  very accessible introduction to machine learning. You can skip ahead to the Neural Networks part if you’re already comfortable with basics of regression, classification, clustering, and general data wrangling.</li>
            <li><strong>Neural Networks with Python:</strong> A gentle <a href="http://adventuresinmachinelearning.com/neural-networks-tutorial/">introduction to Neural Networks from Andy Thomas.</a></li>
            <li><strong>TensorFlow:</strong> Explore the <a href="https://www.tensorflow.org/get_started/get_started">official docs and tutorials from TensorFlow team</a></li>
            <li><strong>Self-Driving Cars:</strong> The <a href="https://en.wikipedia.org/wiki/Autonomous_car#Classification">Wikipedia article on autonomous cars</a> is a quick overview of the technology and policy side, and The First Look at How Google’s Self-Driving Car Handles City Streets is an fun write-up on the real-world result of one of its implementations.</li>
        </ul>
        <h3>Deep Learning Details</h3>
        <ul>
            <li><a href="http://www.deeplearningbook.org/">Deep Learning Book</a> – An excellent comprehensive textbook on deep learning. Up to this point, the review of deep learning fundamentals have been spread across multiple books, papers, and blogs. Now it’s all together in one place.</li>
            <li><a href="http://cs231n.github.io/">CS231n Convolutional Neural Networks for Visual Recognition</a> – While this Stanford class is presumably focused on computer vision, it happens to have the hands down best introduction to deep learning I’ve seen anywhere both in its notes and its video lectures.</li>
            <li><a href="http://karpathy.github.io/">Andrej Karpathy blog</a> – One of the instructors of CS231n keeps a great blog with should be required reading for all interested in machine learning because its very digestable, entertaining, and doesn’t hold back on the messy details</li>
        </ul>
        <h3>Deep Reinforcement Learning</h3>
        <ul>
            <li><a href="https://www.nervanasys.com/demystifying-deep-reinforcement-learning/">Demystifying Deep Reinforcement Learning</a></li>
            <li><a href="http://karpathy.github.io/2016/05/31/rl/">Pong from Pixels</a></li>
            <li><a href="http://karpathy.github.io/2016/05/31/rl/">DeepMind Blog: Deep Reinforcement Learning</a></li>
        </ul>
        <h3>Recurrent Neural Networks</h3>
        <ul>
            <li><a href="http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/">WildML Recurrent Neural Networks Tutorial</a></li>
            <li><a href="https://www.tensorflow.org/versions/r0.11/tutorials/recurrent/">Tensorflow RNN Tutorial</a></li>
            <li><a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/">The Unreasonable Effectiveness of Recurrent Neural Networks</a></li>
            <li><a href="https://iamtrask.github.io//2015/11/15/anyone-can-code-lstm/">Anyone Can Learn To Code an LSTM-RNN in Python</a></li>
        </ul>
        <h3>Autonomous Vehicles and ADAS</h3>
        <ul>
            <li><a href="http://isl.ecst.csuchico.edu/DOCS/darpa2005/DARPA%202005%20Stanley.pdf">Stanley: The Robot that Won the DARPA Grand Challenge (PDF)</a> – A 2006 paper from the Stanford team behind Stanley, the autonomous car that won the 2005 DARPA Grand Challenge.</li>
            <li><a href="http://www.ri.cmu.edu/publication_view.html?pub_id=6906">Tartan Racing: A Multi-Modal Approach to the DARPA Urban Challenge</a> – A 2007 paper from the CMU team that won the 2007 DARPA Urban Challenge.</li>
            <li><a href="http://www.citylab.com/tech/2014/04/first-look-how-googles-self-driving-car-handles-city-streets/8977/">The First Look at How Google’s Self-Driving Car Handles City Streets</a></li>
        </ul>
    </div>
</div>